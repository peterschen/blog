{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Name": {
            "type": "string",
            "metadata": {
                "description": "Name of the ACS cluster to deploy"
            }
        },
        "Region": {
            "type": "string",
            "defaultValue": "westeurope",
            "allowedValues": [
                "japaneast",
                "centralus",
                "eastus2",
                "japanwest",
                "eastasia",
                "southcentralus",
                "australiaeast",
                "australiasoutheast",
                "brazilsouth",
                "southeastasia",
                "westus",
                "northcentralus",
                "westeurope",
                "northeurope",
                "eastus",
                "ukwest",
                "uksouth",
                "westcentralus",
                "westus2",
                "southindia",
                "centralindia",
                "westindia",
                "canadaeast",
                "canadacentral",
                "koreasouth",
                "koreacentral"
            ]
        },
        "AdminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Linux Virtual Machines."
            }
        },
        "AdminSshKey": {
            "type": "string",
            "metadata": {
                "description": "RSA key to be configured on all nodes for direct access through ssh."
            }
        },
        "MasterCount": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                3,
                5
            ],
            "metadata": {
                "description": "The number of masters for the cluster."
            }
        },
        "AgentCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100 (note, for Kubernetes clusters you will also get 1 or 2 public agents in addition to these seleted masters)"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "AgentVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D11_v2_Promo",
                "Standard_DS11_v2",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_A1_v2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_D15_v2",
                "Standard_F1",
                "Standard_F16",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3_v2_Promo",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2_Promo",
                "Standard_F16s",
                "Standard_F1s",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_NC12",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC6",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        }
    },
    "variables": {
        "vmSizeMaster": "[parameters('AgentVmSize')]",
        "dnsPrefixMaster": "[concat(parameters('Name'), '-master')]",
        "dnsPrefixAgent": "[concat(parameters('Name'), '-agent')]"
    },
    "resources": [
        {
            "apiVersion": "2017-07-01",
            "type": "Microsoft.ContainerService/containerServices",
            "location": "[parameters('Region')]",
            "name": "[parameters('Name')]",
            "properties": {
                "orchestratorProfile": {
                    "orchestratorType": "DockerCE"
                },
                "masterProfile": {
                    "count": "[parameters('MasterCount')]",
                    "vmSize": "[variables('vmSizeMaster')]",
                    "dnsPrefix": "[variables('dnsPrefixMaster')]",
                    "storageProfile": "ManagedDisks"
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": "[parameters('AgentCount')]",
                        "vmSize": "[parameters('AgentVmSize')]",
                        "dnsPrefix": "[variables('dnsPrefixAgent')]",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[parameters('AdminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('AdminSshKey')]"
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "FqdnMaster": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/containerServices/', parameters('Name'))).masterProfile.fqdn]"
        },
        "FqdnAgent": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/containerServices/', parameters('Name'))).agentPoolProfiles[0].fqdn]"
        }
    }
}